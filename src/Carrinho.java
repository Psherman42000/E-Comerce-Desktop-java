
import java.io.IOException;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author lindo
 */
public class Carrinho extends javax.swing.JFrame {

    /**
     * Creates new form Carrinho
     */int idpessoa,tam,tam2;
    public void setIdPessoa(int id){
        this.idpessoa=id;
    }
    public int getIdPessoa(){
        return idpessoa;
    }
    Conexao con;
    ArrayList<Produto> produ;
    public Carrinho() {
        initComponents();
    }
    public Carrinho(int id) {
        initComponents();
        setIdPessoa(id);
        con=new Conexao();
        produ=new ArrayList<Produto>();
         try {
             produ=con.getProdutosCarrinho(idpessoa);
         } catch (IOException ex) {
             Logger.getLogger(Carrinho.class.getName()).log(Level.SEVERE, null, ex);
         }
         try{
             foto1.setIcon(produ.get(0).getFoto());
             nome1.setText(produ.get(0).getNome());
             descricao1.setText(produ.get(0).getDescricao());
             preco1.setText("Valor Da Unidade: R$"+Float.toString(produ.get(0).getPrecovenda()));
             quantidade1.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(0).getNome(), produ.get(0).getDescricao(), produ.get(0).getPrecovenda()),idpessoa)));
             precototaliten1.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(0).getPrecovenda()));
             tam=0;
             tam2=tam;
         }catch(Exception e){
             foto1.setIcon(null);
             nome1.setText("");
             descricao1.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
             preco1.setText("Valor Da Unidade: R$0.0");
             quantidade1.setText("");
             precototaliten1.setText("0.0");
         }
         try{
             foto2.setIcon(produ.get(1).getFoto());
             nome2.setText(produ.get(1).getNome());
             descricao2.setText(produ.get(1).getDescricao());
             preco2.setText("Valor Da Unidade: R$"+Float.toString(produ.get(1).getPrecovenda()));
             quantidade2.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(1).getNome(), produ.get(1).getDescricao(), produ.get(1).getPrecovenda()),idpessoa)));
             precototaliten2.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(1).getPrecovenda()));
             tam=1;
             tam2=tam;
         }catch(Exception e){
             foto2.setIcon(null);
             nome2.setText("");
             descricao2.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
             preco2.setText("Valor Da Unidade: R$0.0");
             quantidade2.setText("");
             precototaliten2.setText("0.0");
         }
         try{
             foto3.setIcon(produ.get(2).getFoto());
             nome3.setText(produ.get(2).getNome());
             descricao3.setText(produ.get(2).getDescricao());
             preco3.setText("Valor Da Unidade: R$"+Float.toString(produ.get(2).getPrecovenda()));
             quantidade3.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(2).getNome(), produ.get(2).getDescricao(), produ.get(2).getPrecovenda()),idpessoa)));
             precototaliten3.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(2).getPrecovenda()));
             tam=2;
             tam2=tam;
         }catch(Exception e){
             foto3.setIcon(null);
             nome3.setText("");
             descricao3.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
             preco3.setText("Valor Da Unidade: R$0.0");
             quantidade3.setText("");
             precototaliten3.setText("0.0");
         }
         float total=0;
         try{
         for(int c=0;c<produ.size();c++){
                 total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),idpessoa));
         }
         precototal.setText(Float.toString(total));
         }catch(Exception ex){
             
         }
         
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        foto1 = new javax.swing.JLabel();
        foto3 = new javax.swing.JLabel();
        foto2 = new javax.swing.JLabel();
        nome1 = new javax.swing.JLabel();
        nome3 = new javax.swing.JLabel();
        nome2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descricao1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        descricao2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        descricao3 = new javax.swing.JTextArea();
        preco1 = new javax.swing.JLabel();
        preco2 = new javax.swing.JLabel();
        preco3 = new javax.swing.JLabel();
        quantidade1 = new javax.swing.JLabel();
        menos1 = new javax.swing.JButton();
        mais1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        mais2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        quantidade2 = new javax.swing.JLabel();
        menos2 = new javax.swing.JButton();
        mais3 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        quantidade3 = new javax.swing.JLabel();
        menos3 = new javax.swing.JButton();
        precototaliten1 = new javax.swing.JLabel();
        precototaliten2 = new javax.swing.JLabel();
        precototaliten3 = new javax.swing.JLabel();
        precototal = new javax.swing.JLabel();
        comprar = new javax.swing.JButton();
        prox = new javax.swing.JButton();
        ant = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        remo1 = new javax.swing.JButton();
        remo2 = new javax.swing.JButton();
        remo3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/not-found.jpg"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Home");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-p√°gina-inicial-24.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        foto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/not-found.jpg"))); // NOI18N

        foto3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/not-found.jpg"))); // NOI18N

        foto2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/not-found.jpg"))); // NOI18N

        nome1.setText("...");

        nome3.setText("...");

        nome2.setText("...");

        descricao1.setColumns(20);
        descricao1.setRows(5);
        jScrollPane1.setViewportView(descricao1);

        descricao2.setColumns(20);
        descricao2.setRows(5);
        jScrollPane2.setViewportView(descricao2);

        descricao3.setColumns(20);
        descricao3.setRows(5);
        jScrollPane3.setViewportView(descricao3);

        preco1.setText("...");

        preco2.setText("...");

        preco3.setText("...");

        quantidade1.setText("...");

        menos1.setText("-");
        menos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menos1ActionPerformed(evt);
            }
        });

        mais1.setText("+");
        mais1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mais1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Qntd.");

        mais2.setText("+");
        mais2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mais2ActionPerformed(evt);
            }
        });

        jLabel12.setText("Qntd.");

        quantidade2.setText("...");

        menos2.setText("-");
        menos2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menos2ActionPerformed(evt);
            }
        });

        mais3.setText("+");
        mais3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mais3ActionPerformed(evt);
            }
        });

        jLabel14.setText("Qntd.");

        quantidade3.setText("...");

        menos3.setText("-");
        menos3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menos3ActionPerformed(evt);
            }
        });

        precototaliten1.setText("...");

        precototaliten2.setText("...");

        precototaliten3.setText("...");

        precototal.setText("...");

        comprar.setText("COMPRAR ITENS DO CARRINHO");
        comprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprarActionPerformed(evt);
            }
        });

        prox.setText("PROXIMA PAGINA ==>");
        prox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proxActionPerformed(evt);
            }
        });

        ant.setText("<== PAGINA ANTERIOR");
        ant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antActionPerformed(evt);
            }
        });

        jLabel4.setText("VALOR TOTAL DO CARRINHO: R$");

        jLabel5.setText("VALOR TOTAL: R$");

        jLabel6.setText("VALOR TOTAL: R$");

        jLabel7.setText("VALOR TOTAL: R$");

        remo1.setText("remover produto do carrinho");
        remo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remo1ActionPerformed(evt);
            }
        });

        remo2.setText("remover produto do carrinho");
        remo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remo2ActionPerformed(evt);
            }
        });

        remo3.setText("remover produto do carrinho");
        remo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remo3ActionPerformed(evt);
            }
        });

        jButton1.setText("CANCELAR OS MEUS PEDIDOS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(ant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(prox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jLabel3))
                                .addGap(59, 59, 59)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(remo1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1)
                                        .addComponent(nome1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(foto1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(preco1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(8, 8, 8)
                                        .addComponent(precototaliten1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jButton1))
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(precototal, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(foto2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nome2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2)
                                    .addComponent(comprar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(precototaliten2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(preco2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(remo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(71, 71, 71)
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(precototaliten3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(72, 72, 72)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(nome3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(foto3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                                            .addComponent(preco3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(remo3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(menos1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantidade1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mais1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(207, 207, 207)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(menos2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantidade2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mais2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(197, 197, 197)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(menos3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantidade3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mais3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(remo3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(remo2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(remo1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(foto1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(foto2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nome1)
                                    .addComponent(nome2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(preco2)
                                    .addComponent(preco1)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(foto3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nome3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(preco3)))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantidade2)
                            .addComponent(menos2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mais2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(quantidade1)
                            .addComponent(menos1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mais1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(quantidade3)
                            .addComponent(menos3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mais3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(precototaliten1)
                            .addComponent(precototaliten2)
                            .addComponent(precototaliten3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precototal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comprar, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(140, 140, 140)
                        .addComponent(prox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ant, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(25, 25, 25))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
         
         try {
             new Home(getIdPessoa()).setVisible(true);
             
             dispose();
         } catch (IOException ex) {
             Logger.getLogger(Carrinho.class.getName()).log(Level.SEVERE, null, ex);
         } catch (SQLException ex) {
             Logger.getLogger(Carrinho.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
         try {
             new Home(getIdPessoa()).setVisible(true);
             
             dispose();
         } catch (IOException ex) {
             Logger.getLogger(Carrinho.class.getName()).log(Level.SEVERE, null, ex);
         } catch (SQLException ex) {
             Logger.getLogger(Carrinho.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void proxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proxActionPerformed
        try{
        if(tam<produ.size()-1){
            try{  
                 tam2=tam;
                 tam++;   
                 foto1.setIcon(produ.get(tam).getFoto());
                 nome1.setText(produ.get(tam).getNome());
                 descricao1.setText(produ.get(tam).getDescricao());
                 preco1.setText("Valor Da Unidade: R$"+Float.toString(produ.get(tam).getPrecovenda()));
                 quantidade1.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(tam).getNome(), produ.get(tam).getDescricao(), produ.get(tam).getPrecovenda()),idpessoa)));
                 precototaliten1.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(tam).getPrecovenda()));
             }catch(Exception e){
                 foto1.setIcon(null);
                 nome1.setText("");
                 descricao1.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
                 preco1.setText("Valor Da Unidade: R$0.0");
                 quantidade1.setText("");
                 precototaliten1.setText("0.0");
                 JOptionPane.showMessageDialog(null, e.getMessage());
             }
             try{
                 tam++;
                 foto2.setIcon(produ.get(tam).getFoto());
                 nome2.setText(produ.get(tam).getNome());
                 descricao2.setText(produ.get(tam).getDescricao());
                 preco2.setText("Valor Da Unidade: R$"+Float.toString(produ.get(tam).getPrecovenda()));
                 quantidade2.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(tam).getNome(), produ.get(tam).getDescricao(), produ.get(tam).getPrecovenda()),idpessoa)));
                 precototaliten2.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(tam).getPrecovenda()));
             }catch(Exception e){
                 foto2.setIcon(null);
                 nome2.setText("");
                 descricao2.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
                 preco2.setText("Valor Da Unidade: R$0.0");
                 quantidade2.setText("");
                 precototaliten2.setText("0.0");
             }
             try{
                 tam++;
                 foto3.setIcon(produ.get(tam).getFoto());
                 nome3.setText(produ.get(tam).getNome());
                 descricao3.setText(produ.get(tam).getDescricao());
                 preco3.setText("Valor Da Unidade: R$"+Float.toString(produ.get(tam).getPrecovenda()));
                 quantidade3.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(tam).getNome(), produ.get(tam).getDescricao(), produ.get(tam).getPrecovenda()),idpessoa)));
                 precototaliten3.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(tam).getPrecovenda()));
             }catch(Exception e){
                 foto3.setIcon(null);
                 nome3.setText("");
                 descricao3.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
                 preco3.setText("Valor Da Unidade: R$0.0");
                 quantidade3.setText("");
                 precototaliten3.setText("0.0");
             }
        }else{
            JOptionPane.showMessageDialog(null, "NAO H√Å MAIS PRODUTOS NO CARRINHO");
        }
        }catch(Exception e){
                 foto1.setIcon(null);
                 nome1.setText("");
                 descricao1.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
                 preco1.setText("Valor Da Unidade: R$0.0");
                 quantidade3.setText("");
                 precototaliten1.setText("0.0");
                 foto2.setIcon(null);
                 nome2.setText("");
                 descricao2.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
                 preco2.setText("Valor Da Unidade: R$0.0");
                 quantidade2.setText("");
                 precototaliten2.setText("0.0");
                 foto3.setIcon(null);
                 nome3.setText("");
                 descricao3.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
                 preco3.setText("Valor Da Unidade: R$0.0");
                 quantidade3.setText("");
                 precototaliten3.setText("0.0");
            JOptionPane.showMessageDialog(null, "NAO H√Å MAIS PRODUTOS NO CARRINHO");
        }
    }//GEN-LAST:event_proxActionPerformed

    private void antActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antActionPerformed
        if(tam>3){
            try{  
                 tam=tam2; 
                 foto3.setIcon(produ.get(tam2).getFoto());
                 nome3.setText(produ.get(tam2).getNome());
                 descricao3.setText(produ.get(tam2).getDescricao());
                 preco3.setText("Valor Da Unidade: R$"+Float.toString(produ.get(tam2).getPrecovenda()));
                 quantidade3.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(tam2).getNome(), produ.get(tam2).getDescricao(), produ.get(tam2).getPrecovenda()),idpessoa)));
                 precototaliten3.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(tam2).getPrecovenda()));
                 tam2--;
             }catch(Exception e){
                 foto3.setIcon(null);
                 nome3.setText("");
                 descricao3.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
                 preco3.setText("Valor Da Unidade: R$0.0");
                 quantidade3.setText("");
                 precototaliten3.setText("0.0");
                 JOptionPane.showMessageDialog(null, e.getMessage());
             }
             try{
                 foto2.setIcon(produ.get(tam2).getFoto());
                 nome2.setText(produ.get(tam2).getNome());
                 descricao2.setText(produ.get(tam2).getDescricao());
                 preco2.setText("Valor Da Unidade: R$"+Float.toString(produ.get(tam2).getPrecovenda()));
                 quantidade2.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(tam2).getNome(), produ.get(tam2).getDescricao(), produ.get(tam2).getPrecovenda()),idpessoa)));
                 precototaliten2.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(tam2).getPrecovenda()));
                 tam2--;
             }catch(Exception e){
                 foto2.setIcon(null);
                 nome2.setText("");
                 descricao2.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
                 preco2.setText("Valor Da Unidade: R$0.0");
                 quantidade2.setText("");
                 precototaliten2.setText("0.0");
             }
             try{
                 foto1.setIcon(produ.get(tam2).getFoto());
                 nome1.setText(produ.get(tam2).getNome());
                 descricao1.setText(produ.get(tam2).getDescricao());
                 preco1.setText("Valor Da Unidade: R$"+Float.toString(produ.get(tam2).getPrecovenda()));
                 quantidade1.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(tam2).getNome(), produ.get(tam2).getDescricao(), produ.get(tam2).getPrecovenda()),idpessoa)));
                 precototaliten1.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(tam2).getPrecovenda()));
                 tam2--;
             }catch(Exception e){
                 foto1.setIcon(null);
                 nome1.setText("");
                 descricao1.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
                 preco1.setText("Valor Da Unidade: R$0.0");
                 quantidade1.setText("");
                 precototaliten1.setText("0.0");
             }
        }else{
            JOptionPane.showMessageDialog(null, "ESTA √â A PRIMEIRA PAGINA");
        }
    }//GEN-LAST:event_antActionPerformed

    private void remo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remo1ActionPerformed
        try{
            if(tam==tam2)
            con.removeCarrinho(con.getIdProduto(produ.get(0).getNome(),produ.get(0).getDescricao(),produ.get(0).getPrecovenda()),getIdPessoa());
        else
            con.removeCarrinho(con.getIdProduto(produ.get(tam2+1).getNome(),produ.get(tam2+1).getDescricao(),produ.get(tam2+1).getPrecovenda()),getIdPessoa());
        try {
             produ=con.getProdutosCarrinho();
         } catch (Exception ex) {
             
         }
         try{
             foto1.setIcon(produ.get(0).getFoto());
             nome1.setText(produ.get(0).getNome());
             descricao1.setText(produ.get(0).getDescricao());
             preco1.setText("Valor Da Unidade: R$"+Float.toString(produ.get(0).getPrecovenda()));
             quantidade1.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(0).getNome(), produ.get(0).getDescricao(), produ.get(0).getPrecovenda()),idpessoa)));
             precototaliten1.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(0).getPrecovenda()));
             tam=0;
             tam2=tam;
         }catch(Exception e){
             foto1.setIcon(null);
             nome1.setText("");
             descricao1.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
             preco1.setText("Valor Da Unidade: R$0.0");
             quantidade1.setText("");
             precototaliten1.setText("0.0");
         }
         try{
             foto2.setIcon(produ.get(1).getFoto());
             nome2.setText(produ.get(1).getNome());
             descricao2.setText(produ.get(1).getDescricao());
             preco2.setText("Valor Da Unidade: R$"+Float.toString(produ.get(1).getPrecovenda()));
             quantidade2.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(1).getNome(), produ.get(1).getDescricao(), produ.get(1).getPrecovenda()),idpessoa)));
             precototaliten2.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(1).getPrecovenda()));
             tam=1;
             tam2=tam;
         }catch(Exception e){
             foto2.setIcon(null);
             nome2.setText("");
             descricao2.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
             preco2.setText("Valor Da Unidade: R$0.0");
             quantidade2.setText("");
             precototaliten2.setText("0.0");
         }
         try{
             foto3.setIcon(produ.get(2).getFoto());
             nome3.setText(produ.get(2).getNome());
             descricao3.setText(produ.get(2).getDescricao());
             preco3.setText("Valor Da Unidade: R$"+Float.toString(produ.get(2).getPrecovenda()));
             quantidade3.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(2).getNome(), produ.get(2).getDescricao(), produ.get(2).getPrecovenda()),idpessoa)));
             precototaliten3.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(2).getPrecovenda()));
             tam=2;
             tam2=tam;
         }catch(Exception e){
             foto3.setIcon(null);
             nome3.setText("");
             descricao3.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
             preco3.setText("Valor Da Unidade: R$0.0");
             quantidade3.setText("");
             precototaliten3.setText("0.0");
         }
         float total=0;
         try{
         for(int c=0;c<produ.size();c++){
                 total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
            }
            precototal.setText(Float.toString(total));
         }catch(Exception e){
             precototal.setText("0.0");
         }
        JOptionPane.showMessageDialog(null, "REMOVIDO COM SUCESSO");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "NAO H√Å NADA PARA REMOVER NESSE CAMPO");
        }
    }//GEN-LAST:event_remo1ActionPerformed

    private void remo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remo2ActionPerformed
        try{if(tam==tam2)
            con.removeCarrinho(con.getIdProduto(produ.get(1).getNome(),produ.get(1).getDescricao(),produ.get(1).getPrecovenda()),getIdPessoa());
        else
            con.removeCarrinho(con.getIdProduto(produ.get(tam2+2).getNome(),produ.get(tam2+2).getDescricao(),produ.get(tam2+2).getPrecovenda()),getIdPessoa());
        try {
             produ=con.getProdutosCarrinho();
         } catch (IOException ex) {
             
         }
         try{
             foto1.setIcon(produ.get(0).getFoto());
             nome1.setText(produ.get(0).getNome());
             descricao1.setText(produ.get(0).getDescricao());
             preco1.setText("Valor Da Unidade: R$"+Float.toString(produ.get(0).getPrecovenda()));
             quantidade1.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(0).getNome(), produ.get(0).getDescricao(), produ.get(0).getPrecovenda()),idpessoa)));
             precototaliten1.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(0).getPrecovenda()));
             tam=0;
             tam2=tam;
         }catch(Exception e){
             foto1.setIcon(null);
             nome1.setText("");
             descricao1.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
             preco1.setText("Valor Da Unidade: R$0.0");
             quantidade1.setText("");
             precototaliten1.setText("0.0");
         }
         try{
             foto2.setIcon(produ.get(1).getFoto());
             nome2.setText(produ.get(1).getNome());
             descricao2.setText(produ.get(1).getDescricao());
             preco2.setText("Valor Da Unidade: R$"+Float.toString(produ.get(1).getPrecovenda()));
             quantidade2.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(1).getNome(), produ.get(1).getDescricao(), produ.get(1).getPrecovenda()),idpessoa)));
             precototaliten2.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(1).getPrecovenda()));
             tam=1;
             tam2=tam;
         }catch(Exception e){
             foto2.setIcon(null);
             nome2.setText("");
             descricao2.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
             preco2.setText("Valor Da Unidade: R$0.0");
             quantidade2.setText("");
             precototaliten2.setText("0.0");
         }
         try{
             foto3.setIcon(produ.get(2).getFoto());
             nome3.setText(produ.get(2).getNome());
             descricao3.setText(produ.get(2).getDescricao());
             preco3.setText("Valor Da Unidade: R$"+Float.toString(produ.get(2).getPrecovenda()));
             quantidade3.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(2).getNome(), produ.get(2).getDescricao(), produ.get(2).getPrecovenda()),idpessoa)));
             precototaliten3.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(2).getPrecovenda()));
             tam=2;
             tam2=tam;
         }catch(Exception e){
             foto3.setIcon(null);
             nome3.setText("");
             descricao3.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
             preco3.setText("Valor Da Unidade: R$0.0");
             quantidade3.setText("");
             precototaliten3.setText("0.0");
         }
         float total=0;
         try{
         for(int c=0;c<produ.size();c++){
                 total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
            }
            precototal.setText(Float.toString(total));
         }catch(Exception e){
             precototal.setText("0.0");
         }
        JOptionPane.showMessageDialog(null, "REMOVIDO COM SUCESSO");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "NAO H√Å NADA PARA REMOVER NESSE CAMPO");
        }
        
    }//GEN-LAST:event_remo2ActionPerformed

    private void remo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remo3ActionPerformed
        try{if(tam==tam2)
            con.removeCarrinho(con.getIdProduto(produ.get(2).getNome(),produ.get(2).getDescricao(),produ.get(2).getPrecovenda()),getIdPessoa());
        else
            con.removeCarrinho(con.getIdProduto(produ.get(tam2+3).getNome(),produ.get(tam2+3).getDescricao(),produ.get(tam2+3).getPrecovenda()),getIdPessoa());
        try {
             produ=con.getProdutosCarrinho();
         } catch (IOException ex) {
             
         }
         try{
             foto1.setIcon(produ.get(0).getFoto());
             nome1.setText(produ.get(0).getNome());
             descricao1.setText(produ.get(0).getDescricao());
             preco1.setText("Valor Da Unidade: R$"+Float.toString(produ.get(0).getPrecovenda()));
             quantidade1.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(0).getNome(), produ.get(0).getDescricao(), produ.get(0).getPrecovenda()),idpessoa)));
             precototaliten1.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(0).getPrecovenda()));
             tam=0;
             tam2=tam;
         }catch(Exception e){
             foto1.setIcon(null);
             nome1.setText("");
             descricao1.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
             preco1.setText("Valor Da Unidade: R$0.0");
             quantidade1.setText("");
             precototaliten1.setText("0.0");
         }
         try{
             foto2.setIcon(produ.get(1).getFoto());
             nome2.setText(produ.get(1).getNome());
             descricao2.setText(produ.get(1).getDescricao());
             preco2.setText("Valor Da Unidade: R$"+Float.toString(produ.get(1).getPrecovenda()));
             quantidade2.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(1).getNome(), produ.get(1).getDescricao(), produ.get(1).getPrecovenda()),idpessoa)));
             precototaliten2.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(1).getPrecovenda()));
             tam=1;
             tam2=tam;
         }catch(Exception e){
             foto2.setIcon(null);
             nome2.setText("");
             descricao2.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
             preco2.setText("Valor Da Unidade: R$0.0");
             quantidade2.setText("");
             precototaliten2.setText("0.0");
         }
         try{
             foto3.setIcon(produ.get(2).getFoto());
             nome3.setText(produ.get(2).getNome());
             descricao3.setText(produ.get(2).getDescricao());
             preco3.setText("Valor Da Unidade: R$"+Float.toString(produ.get(2).getPrecovenda()));
             quantidade3.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(2).getNome(), produ.get(2).getDescricao(), produ.get(2).getPrecovenda()),idpessoa)));
             precototaliten3.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(2).getPrecovenda()));
             tam=2;
             tam2=tam;
         }catch(Exception e){
             foto3.setIcon(null);
             nome3.setText("");
             descricao3.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
             preco3.setText("Valor Da Unidade: R$0.0");
             quantidade3.setText("");
             precototaliten3.setText("0.0");
         }
         float total=0;
         try{
            for(int c=0;c<produ.size();c++){
                 total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
            }
            precototal.setText(Float.toString(total));
         }catch(Exception e){
             precototal.setText("0.0");
         }
        JOptionPane.showMessageDialog(null, "REMOVIDO COM SUCESSO");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "NAO H√Å NADA PARA REMOVER NESSE CAMPO");
        }
        
    }//GEN-LAST:event_remo3ActionPerformed

    private void menos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menos1ActionPerformed
        
            if(tam==tam2){
                if(con.getQuantidade(con.getIdProduto(produ.get(0).getNome(),produ.get(0).getDescricao(),produ.get(0).getPrecovenda()),getIdPessoa())>1){
                    con.setMenosQuantidade(con.getIdProduto(produ.get(0).getNome(),produ.get(0).getDescricao(),produ.get(0).getPrecovenda()),getIdPessoa());
                    quantidade1.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(0).getNome(),produ.get(0).getDescricao(),produ.get(0).getPrecovenda()),getIdPessoa())));
                    precototaliten1.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(0).getPrecovenda()));
                    float total=0;
                    for(int c=0;c<produ.size();c++){
                         total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(0).getNome(),produ.get(0).getDescricao(),produ.get(0).getPrecovenda()),getIdPessoa()));
                    }
                    precototal.setText(Float.toString(total));
                }else
                    JOptionPane.showMessageDialog(null, "DEVE HAVER PELO MENOS '1' DE QUANTIDADE PARA PERMANECER NO CARRINHO");
            }else{
                if(con.getQuantidade(con.getIdProduto(produ.get(tam+1).getNome(),produ.get(tam+1).getDescricao(),produ.get(tam+1).getPrecovenda()),getIdPessoa())>1){    
                    con.setMenosQuantidade(con.getIdProduto(produ.get(tam2+1).getNome(),produ.get(tam2+1).getDescricao(),produ.get(tam2+1).getPrecovenda()),getIdPessoa());
                    quantidade1.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(tam2+1).getNome(),produ.get(tam2+1).getDescricao(),produ.get(tam2+1).getPrecovenda()),getIdPessoa())));
                    precototaliten1.setText(Float.toString(Integer.parseInt(quantidade3.getText())*produ.get(tam2+1).getPrecovenda()));
                    float total=0;
                    for(int c=0;c<produ.size();c++){
                         total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
                    }
                    precototal.setText(Float.toString(total));
                }else
                    JOptionPane.showMessageDialog(null, "DEVE HAVER PELO MENOS '1' DE QUANTIDADE PARA PERMANECER NO CARRINHO");
            }    
    }//GEN-LAST:event_menos1ActionPerformed

    private void menos2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menos2ActionPerformed
        if(tam==tam2){
                if((con.getQuantidade(con.getIdProduto(produ.get(1).getNome(),produ.get(1).getDescricao(),produ.get(1).getPrecovenda()),getIdPessoa()))>1){
                    con.setMenosQuantidade(con.getIdProduto(produ.get(1).getNome(),produ.get(1).getDescricao(),produ.get(1).getPrecovenda()),getIdPessoa());
                    quantidade2.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(1).getNome(),produ.get(1).getDescricao(),produ.get(1).getPrecovenda()),getIdPessoa())));
                    precototaliten2.setText(Float.toString(Integer.parseInt(quantidade2.getText())*produ.get(1).getPrecovenda()));
                    float total=0;
                    for(int c=0;c<produ.size();c++){
                         total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
                    }
                    precototal.setText(Float.toString(total));
                }else
                    JOptionPane.showMessageDialog(null, "DEVE HAVER PELO MENOS '1' DE QUANTIDADE PARA PERMANECER NO CARRINHO");
        }else{
                if(con.getQuantidade(con.getIdProduto(produ.get(tam+2).getNome(),produ.get(tam+2).getDescricao(),produ.get(tam+2).getPrecovenda()),getIdPessoa())>1){    
                    con.setMenosQuantidade(con.getIdProduto(produ.get(tam2+2).getNome(),produ.get(tam2+2).getDescricao(),produ.get(tam2+2).getPrecovenda()),getIdPessoa());
                    quantidade2.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(tam2+2).getNome(),produ.get(tam2+2).getDescricao(),produ.get(tam2+2).getPrecovenda()),getIdPessoa())));
                    precototaliten2.setText(Float.toString(Integer.parseInt(quantidade2.getText())*produ.get(tam2+2).getPrecovenda()));
                    float total=0;
                    for(int c=0;c<produ.size();c++){
                         total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
                    }
                    precototal.setText(Float.toString(total));
                    }else
                    JOptionPane.showMessageDialog(null, "DEVE HAVER PELO MENOS '1' DE QUANTIDADE PARA PERMANECER NO CARRINHO");
        } 
    }//GEN-LAST:event_menos2ActionPerformed

    private void menos3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menos3ActionPerformed
        if(tam==tam2){
                if(con.getQuantidade(con.getIdProduto(produ.get(2).getNome(),produ.get(2).getDescricao(),produ.get(2).getPrecovenda()),getIdPessoa())>1){
                    con.setMenosQuantidade(con.getIdProduto(produ.get(2).getNome(),produ.get(2).getDescricao(),produ.get(2).getPrecovenda()),getIdPessoa());
                    quantidade3.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(2).getNome(),produ.get(2).getDescricao(),produ.get(2).getPrecovenda()),getIdPessoa())));
                    precototaliten3.setText(Float.toString(Integer.parseInt(quantidade3.getText())*produ.get(2).getPrecovenda()));
                    float total=0;
                    for(int c=0;c<produ.size();c++){
                         total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
                    }
                    precototal.setText(Float.toString(total));
                }else
                    JOptionPane.showMessageDialog(null, "DEVE HAVER PELO MENOS '1' DE QUANTIDADE PARA PERMANECER NO CARRINHO");
        }else{
                if(con.getQuantidade(con.getIdProduto(produ.get(tam+3).getNome(),produ.get(tam+3).getDescricao(),produ.get(tam+3).getPrecovenda()),getIdPessoa())>1){    
                    con.setMenosQuantidade(con.getIdProduto(produ.get(tam2+3).getNome(),produ.get(tam2+3).getDescricao(),produ.get(tam2+3).getPrecovenda()),getIdPessoa());
                    quantidade3.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(tam2+3).getNome(),produ.get(tam2+3).getDescricao(),produ.get(tam2+3).getPrecovenda()),getIdPessoa())));
                    precototaliten3.setText(Float.toString(Integer.parseInt(quantidade3.getText())*produ.get(tam2+3).getPrecovenda()));
                    float total=0;
                    for(int c=0;c<produ.size();c++){
                         total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
                    }
                    precototal.setText(Float.toString(total));
                }else
                    JOptionPane.showMessageDialog(null, "DEVE HAVER PELO MENOS '1' DE QUANTIDADE PARA PERMANECER NO CARRINHO");
        } 
    }//GEN-LAST:event_menos3ActionPerformed

    private void mais1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mais1ActionPerformed
        if(tam==tam2){
            con.setMaisQuantidade(con.getIdProduto(produ.get(0).getNome(),produ.get(0).getDescricao(),produ.get(0).getPrecovenda()),getIdPessoa());
            quantidade1.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(0).getNome(),produ.get(0).getDescricao(),produ.get(0).getPrecovenda()),getIdPessoa())));
            precototaliten1.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(0).getPrecovenda()));
            float total=0;
            for(int c=0;c<produ.size();c++){
                         total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
            }
            precototal.setText(Float.toString(total));
        }
        else{
            con.setMaisQuantidade(con.getIdProduto(produ.get(tam2+1).getNome(),produ.get(tam2+1).getDescricao(),produ.get(tam2+1).getPrecovenda()),getIdPessoa());
            quantidade1.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(tam2+1).getNome(),produ.get(tam2+1).getDescricao(),produ.get(tam2+1).getPrecovenda()),getIdPessoa())));
            precototaliten1.setText(Float.toString(Integer.parseInt(quantidade3.getText())*produ.get(tam2+1).getPrecovenda()));
            float total=0;
            for(int c=0;c<produ.size();c++){
                         total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
                    }
            precototal.setText(Float.toString(total));
        }
    }//GEN-LAST:event_mais1ActionPerformed

    private void mais2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mais2ActionPerformed
        if(tam==tam2){
            
            con.setMaisQuantidade(con.getIdProduto(produ.get(1).getNome(),produ.get(1).getDescricao(),produ.get(1).getPrecovenda()),idpessoa);
            quantidade2.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(1).getNome(),produ.get(1).getDescricao(),produ.get(1).getPrecovenda()),getIdPessoa())));
            precototaliten2.setText(Float.toString(Integer.parseInt(quantidade2.getText())*produ.get(1).getPrecovenda()));
            float total=0;
            for(int c=0;c<produ.size();c++){
                         total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
                    }
            precototal.setText(Float.toString(total));
        }
        else{
            con.setMaisQuantidade(con.getIdProduto(produ.get(tam2+2).getNome(),produ.get(tam2+2).getDescricao(),produ.get(tam2+2).getPrecovenda()),getIdPessoa());
            quantidade2.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(tam2+2).getNome(),produ.get(tam2+2).getDescricao(),produ.get(tam2+2).getPrecovenda()),getIdPessoa())));
            precototaliten2.setText(Float.toString(Integer.parseInt(quantidade2.getText())*produ.get(tam2+2).getPrecovenda()));
            float total=0;
            for(int c=0;c<produ.size();c++){
                         total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
                    }
            precototal.setText(Float.toString(total));
        }
    }//GEN-LAST:event_mais2ActionPerformed

    private void mais3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mais3ActionPerformed
        if(tam==tam2){
            con.setMaisQuantidade(con.getIdProduto(produ.get(2).getNome(),produ.get(2).getDescricao(),produ.get(2).getPrecovenda()),getIdPessoa());
            quantidade3.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(2).getNome(),produ.get(2).getDescricao(),produ.get(2).getPrecovenda()),getIdPessoa())));
            precototaliten3.setText(Float.toString(Integer.parseInt(quantidade3.getText())*produ.get(2).getPrecovenda()));
            float total=0;
            for(int c=0;c<produ.size();c++){
                         total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
                    }
            precototal.setText(Float.toString(total));
        }
        else{
            con.setMaisQuantidade(con.getIdProduto(produ.get(tam2+3).getNome(),produ.get(tam2+3).getDescricao(),produ.get(tam2+3).getPrecovenda()),getIdPessoa());
            quantidade3.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(tam2+3).getNome(),produ.get(tam2+3).getDescricao(),produ.get(tam2+3).getPrecovenda()),getIdPessoa())));
            precototaliten3.setText(Float.toString(Integer.parseInt(quantidade3.getText())*produ.get(tam2+3).getPrecovenda()));
            float total=0;
            for(int c=0;c<produ.size();c++){
                         total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
                    }
            precototal.setText(Float.toString(total));
        }
    }//GEN-LAST:event_mais3ActionPerformed

    private void comprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprarActionPerformed
        if(produ!=null){
            con.inserePedido("20/09/2000",Float.parseFloat(precototal.getText()),idpessoa);
            for(int c=0;c<produ.size();c++){
                con.inserePedidoProduto(produ.get(c).getPrecovenda(), con.getQuantidade(con.getIdProduto(produ.get(c).getNome(), produ.get(c).getDescricao(), produ.get(c).getPrecovenda()),idpessoa),con.getIdProduto(produ.get(c).getNome(), produ.get(c).getDescricao(), produ.get(c).getPrecovenda()), idpessoa);
            }
            Pedido p=new Pedido();
            p.getPedido().setText("Pedido N."+Integer.toString(con.getIdPedido("20/09/2000",Float.parseFloat(precototal.getText()),idpessoa)));
            p.getEndereco().setText("Seu Pedido Chegar√° Em "+con.getEnderecoPessoa(idpessoa));
            p.getCidade().setText("Na Cidade De "+con.getCidadePessoa(idpessoa));
            p.getData().setText("Em um Perildo de Cerca de 30 Dias A Partir De Hoje");
            p.getPrecototal().setText("Total Pago: R$"+precototal.getText());
            String produtos="Produtos Comprados: ";
            for(int c=0;c<produ.size();c++){
                if(c==produ.size()-1)
                  produtos+=(con.getQuantidade(con.getIdProduto(produ.get(c).getNome(), produ.get(c).getDescricao(), produ.get(c).getPrecovenda()),idpessoa)+"x "+produ.get(c).getNome()+".");  
                else
                    produtos+=(con.getQuantidade(con.getIdProduto(produ.get(c).getNome(), produ.get(c).getDescricao(), produ.get(c).getPrecovenda()),idpessoa)+"x "+produ.get(c).getNome()+", ");
            }
            p.getProdutos().setText(produtos);
            p.setVisible(true);
            JOptionPane.showMessageDialog(null,"COMPRA REALIZADA COM SUCESSO, OBRIGADO PELA PREFERENCIA");
            for(int c=0;c<produ.size();c++){
                con.removeCarrinho(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa());
            }
             try {
                 produ=con.getProdutosCarrinho();
             } catch (Exception ex) {

             }
             try{
                 foto1.setIcon(produ.get(0).getFoto());
                 nome1.setText(produ.get(0).getNome());
                 descricao1.setText(produ.get(0).getDescricao());
                 preco1.setText("Valor Da Unidade: R$"+Float.toString(produ.get(0).getPrecovenda()));
                 quantidade1.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(0).getNome(), produ.get(0).getDescricao(), produ.get(0).getPrecovenda()),idpessoa)));
                 precototaliten1.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(0).getPrecovenda()));
                 tam=0;
                 tam2=tam;
             }catch(Exception e){
                 foto1.setIcon(null);
                 nome1.setText("");
                 descricao1.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
                 preco1.setText("Valor Da Unidade: R$0.0");
                 quantidade1.setText("");
                 precototaliten1.setText("0.0");
             }
             try{
                 foto2.setIcon(produ.get(1).getFoto());
                 nome2.setText(produ.get(1).getNome());
                 descricao2.setText(produ.get(1).getDescricao());
                 preco2.setText("Valor Da Unidade: R$"+Float.toString(produ.get(1).getPrecovenda()));
                 quantidade2.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(1).getNome(), produ.get(1).getDescricao(), produ.get(1).getPrecovenda()),idpessoa)));
                 precototaliten2.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(1).getPrecovenda()));
                 tam=1;
                 tam2=tam;
             }catch(Exception e){
                 foto2.setIcon(null);
                 nome2.setText("");
                 descricao2.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
                 preco2.setText("Valor Da Unidade: R$0.0");
                 quantidade2.setText("");
                 precototaliten2.setText("0.0");
             }
             try{
                 foto3.setIcon(produ.get(2).getFoto());
                 nome3.setText(produ.get(2).getNome());
                 descricao3.setText(produ.get(2).getDescricao());
                 preco3.setText("Valor Da Unidade: R$"+Float.toString(produ.get(2).getPrecovenda()));
                 quantidade3.setText(Integer.toString(con.getQuantidade(con.getIdProduto(produ.get(2).getNome(), produ.get(2).getDescricao(), produ.get(2).getPrecovenda()),idpessoa)));
                 precototaliten3.setText(Float.toString(Integer.parseInt(quantidade1.getText())*produ.get(2).getPrecovenda()));
                 tam=2;
                 tam2=tam;
             }catch(Exception e){
                 foto3.setIcon(null);
                 nome3.setText("");
                 descricao3.setText("NAO HA MAIS PRODUTOS NO CARRINHO");
                 preco3.setText("Valor Da Unidade: R$0.0");
                 quantidade3.setText("");
                 precototaliten3.setText("0.0");
             }
             float total=0;
             try{
             for(int c=0;c<produ.size();c++){
                     total+=(produ.get(c).getPrecovenda()*con.getQuantidade(con.getIdProduto(produ.get(c).getNome(),produ.get(c).getDescricao(),produ.get(c).getPrecovenda()),getIdPessoa()));
                }
                precototal.setText(Float.toString(total));
             }catch(Exception e){
                 precototal.setText("0.0");
             }
        }else{
            JOptionPane.showMessageDialog(null, "NAO H√Å PRODUTOS NO CARRINHO, ADICIONE PRODUTOS AO CARRINHO PARA PODER COMPRA-LO");
        }
    }//GEN-LAST:event_comprarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(con.existePedidoPessoa(idpessoa)){
            ArrayList<Integer> arr=con.getPedidosProdutos(idpessoa);
            for(int c=0;c<arr.size();c++){
                con.apagaPedidoProduto(arr.get(1));
            }
            con.apagaPedidos(idpessoa);
            JOptionPane.showMessageDialog(null,"PEDIDOS APAGADOS/CANCELADOS COM SUCESSO");
        }
        else{
            JOptionPane.showMessageDialog(null,"NAO H√Å PEDIDOS RELACIONADOS A VOCE");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Carrinho().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ant;
    private javax.swing.JButton comprar;
    private javax.swing.JTextArea descricao1;
    private javax.swing.JTextArea descricao2;
    private javax.swing.JTextArea descricao3;
    private javax.swing.JLabel foto1;
    private javax.swing.JLabel foto2;
    private javax.swing.JLabel foto3;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton mais1;
    private javax.swing.JButton mais2;
    private javax.swing.JButton mais3;
    private javax.swing.JButton menos1;
    private javax.swing.JButton menos2;
    private javax.swing.JButton menos3;
    private javax.swing.JLabel nome1;
    private javax.swing.JLabel nome2;
    private javax.swing.JLabel nome3;
    private javax.swing.JLabel preco1;
    private javax.swing.JLabel preco2;
    private javax.swing.JLabel preco3;
    private javax.swing.JLabel precototal;
    private javax.swing.JLabel precototaliten1;
    private javax.swing.JLabel precototaliten2;
    private javax.swing.JLabel precototaliten3;
    private javax.swing.JButton prox;
    private javax.swing.JLabel quantidade1;
    private javax.swing.JLabel quantidade2;
    private javax.swing.JLabel quantidade3;
    private javax.swing.JButton remo1;
    private javax.swing.JButton remo2;
    private javax.swing.JButton remo3;
    // End of variables declaration//GEN-END:variables
}
